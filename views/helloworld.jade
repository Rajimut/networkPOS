extends layout
block holder
  h1 Isotope - sorting
  #sorts.button-group
      button.button.is-checked(data-sort-value='original-order') original order
      |   
      button.button(data-sort-value='name') name
      |   
      button.button(data-sort-value='symbol') symbol
      |   
      button.button(data-sort-value='number') number
      |   
      button.button(data-sort-value='weight') weight
      |   
      button.button(data-sort-value='category') category
    div#container
      each val in buyertransactions_
        .element-item(data-category='transition')
          h1.name #{val.transaction_id}
          |     
          p.symbol 
          |     
          p.number #{val.aftertax}
          |     
          p.weight #{val.aftertax}
          |    
          div
              a.btn.btn-xs.btn-success(receipt-id='#{val.transaction_id}') Details   

  script(type='text/javascript').
    var $container = $('#container');
    $container.isotope({
        itemSelector: '.element-item',
        layoutMode: 'fitRows',
        getSortData: {
          name: '.name',
          symbol: '.symbol',
          number: '.number parseInt',
          category: '[data-category]',
          weight: function( itemElem ) {
            var weight = $( itemElem ).find('.weight').text();
            return parseFloat( weight.replace( /[\(\)]/g, '') );
          }
        }
      });

    // bind sort button click
    $('#sorts').on( 'click', 'button', function() {
      var sortValue = $(this).attr('data-sort-value');
      $container.isotope({ sortBy: sortValue });
    });

    // change is-checked class on buttons
    $('.button-group').each( function( i, buttonGroup ) {
      var $buttonGroup = $( buttonGroup );
      $buttonGroup.on( 'click', 'button', function() {
        $buttonGroup.find('.is-checked').removeClass('is-checked');
        $( this ).addClass('is-checked');
      });
    });
      